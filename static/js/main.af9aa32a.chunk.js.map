{"version":3,"sources":["App.js","index.js"],"names":["nextId","initialState","id","name","height","weight","bmi","type","resetAll","userData","InputForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleHeight","_ref","value","target","setState","handleWeight","_ref2","handleName","_ref3","calculateIndex","_this$state","state","index","parseInt","Math","pow","toFixed","keys","length","setType","setTimeout","handleState","bmiType","floatNum","_objectSpread","callbackFromParent","getMessage","message","resetState","handleResetAll","_this$state2","enabled","react_default","a","createElement","className","onChange","disabled","onClick","Component","Table","_this2","getTableData","prevProps","previousID","tableRows","user","currentID","concat","toConsumableArray","setTableData","map","_ref4","key","prevState","Calculator","_this3","myCallback","dataFromChild","App_InputForm","App_Table","App","App_Calculator","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af9aa32a.chunk.js","sourcesContent":["import React, {Component} from 'react';\n// import './App.css';\nimport styles from './App.css';\n\nlet nextId = 1;\nconst initialState = {\n  id: nextId,\n  name: \"\",\n  height: \"\",\n  weight: \"\",\n  bmi: \"\",\n  type: \"\",\n  resetAll: false,\n  userData: {}\n};\n\nclass InputForm extends Component {\n   \n  constructor(props) {\n    super(props);\n    this.state = {...initialState};\n    ;   \n  } \n  handleHeight = ({target:{value}}) => this.setState({height: value});\n  handleWeight = ({target:{value}}) => this.setState({weight: value});\n  handleName = ({target:{value}}) => this.setState({name: value});\n\n  calculateIndex = () => {\n    const {height, weight, userData, id} = this.state;\n    let index = (parseInt(weight) / Math.pow(parseInt(height)/100, 2))\n                .toFixed(1);     \n    this.setState({bmi: index});\n\n    Object.keys(userData).length || id > 1 ? this.setState({id: ++nextId}) : nextId = 1;\n\n    this.setState({type: this.setType(index)});\n    setTimeout(this.handleState, 50);  \n  }\n\n  setType = (index) => {   \n    let bmiType;\n    if (index) {\n      let floatNum = parseInt(index);      \n      switch (true) {\n        case floatNum <= 18.5:          \n          bmiType = \"Underweight\"\n          break;\n        case floatNum <= 24.9:          \n          bmiType = \"Normal\"\n          break;\n        case floatNum <= 29.9:          \n          bmiType = \"Overweight\"\n          break;\n        case floatNum >= 30:          \n          bmiType= \"Obesity\"\n          break;\n        default:\n          bmiType = \"Wrong input\";\n      }\n      \n      return bmiType; \n    }\n    return \"\";    \n  }\n\n  handleState = () => {\n    if (this.state && this.state.resetAll === false) {\n      this.setState({          \n          userData: {\n            id: this.state.id,\n            name: this.state.name,\n            height: this.state.height,\n            weight: this.state.weight,\n            bmi: this.state.bmi,\n            type: this.state.type\n          }\n        });    \n    }\n    if (this.state.resetAll) {\n      this.setState({...initialState});   \n    }\n    this.props.callbackFromParent(this.state);\n  }\n\n  getMessage = (index) => {\n    let message;    \n    if (index) {\n      let floatNum = parseInt(index);      \n      switch (true) {\n        case floatNum <= 18.5:\n          message = \"Underweight, Your BMI is \";         \n          break;\n        case floatNum <= 24.9:\n          message = \"Normal, Your BMI is \";         \n          break;\n        case floatNum <= 29.9:\n          message = \"Overweight, Your BMI is \";         \n          break;\n        case floatNum >= 30:\n          message = \"Obesity, Your BMI is \";          \n          break;\n        default:\n          message = \"Please, enter valid data\";\n      }      \n      return message; \n    }\n    return \"\";    \n  }\n\n  resetState = () => {    \n    this.setState({...initialState});\n    this.setState({id: nextId});\n  }\n  \n  handleResetAll = () => {\n    this.setState({resetAll: true, id: 1});\n    setTimeout(this.handleState, 50);\n  }  \n\n  render() { \n    const {bmi, name, height, weight} = this.state;\n    const enabled = name && height && weight ;\n    return (      \n      <div>\n        <h4>Healthy Weight Calculator</h4>\n        <h5>Body Mass Index (BMI)</h5>\n        <h5 className = \"index\">{this.getMessage(bmi) + \" \" + bmi}</h5>\n        <div id=\"inputSection\">\n          <form id=\"nameForm\">          \n            <label>\n              <span className=\"input\">Name</span>\n              <input className=\"form-control\" type=\"text\" value={name} onChange={this.handleName} />\n            </label>\n            </form>\n            <form>          \n              <label>              \n                <span className=\"input\">Height (sm)</span>\n                <input className=\"form-control\" type=\"number\" value={height} onChange={this.handleHeight} />\n              </label>\n            </form>\n          <form>\n            <label>\n              <span className=\"input\">Weight (kg)</span>\n              <input type=\"text\" className=\"form-control\" value={weight} onChange={this.handleWeight}/>\n            </label>                  \n          </form>\n        </div>\n        <div id=\"buttonSection\">\n        <button className=\"btn btn-success\" type=\"button\" disabled={ !enabled } onClick={ this.calculateIndex }>Calculate</button>\n        <button className=\"btn btn-warning\" onClick={ this.resetState }>Reset</button>\n        <button className=\"btn btn-danger\" onClick={ this.handleResetAll }>Reset All</button>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableRows: []\n    };\n  }\n \n  getTableData = (prevProps) => {\n    const {tableRows} = this.state;\n    const {userData} = this.props.user;\n    let {id: currentID} = this.props.user.userData;\n    let previousID;\n\n    prevProps.user ? previousID = prevProps.user.userData.id : previousID = 0;\n\n    Object.keys(userData).length === 0 ? \n    previousID !== currentID && this.setState({ tableRows: [] }) :\n    previousID !== currentID && this.setState({ tableRows: [...tableRows, userData] });\n    // console.log(\"Prev_props: \", prevProps);\n    // console.log(\"Prev_state: \", prevState);\n    // console.log(\"Prev_id: \", previousID);\n    // console.log(\"Curr_id: \", currentID);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.getTableData(prevProps);\n  }\n\n  setTableData = () => {\n    const {tableRows} = this.state;    \n      return tableRows.map( ({id, name, height, weight, bmi, type}) => {\n        return (\n          <tr key = {id}>\n            <td className=\"id\">{id}</td>\n            <td className=\"name\">{name}</td>\n            <td>{height}</td> \n            <td>{weight}</td>\n            <td>{bmi}</td>\n            <td>{type}</td>\n          </tr>\n        )\n      }) \n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n        <tbody>\n          <tr>\n            <th className=\"id\">ID</th>\n            <th className=\"name\">Name</th>\n            <th>Height</th> \n            <th>Weight</th>\n            <th>BMI</th>\n            <th>Type</th>\n          </tr>\n          {this.setTableData()}\n          </tbody>         \n        </table>\n      </div>\n    )\n  }\n}\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = \"\";\n  }\n   \n  myCallback = (dataFromChild) => {    \n    this.setState(dataFromChild);  \n  }  \n\n  render() {\n    const userData = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"inputForm\">        \n          <InputForm callbackFromParent={this.myCallback}/>      \n        </div>\n        <div className=\"table\">\n          <Table user={userData}/>\n        </div>\n      </div>\n    )\n  }  \n}\n\nfunction App() {\n  return (    \n      <Calculator />    \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}